{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","Login","useState","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","useEffect","includes","trim","length","login","onSubmit","event","preventDefault","onLogin","control","invalid","htmlFor","id","value","onChange","target","console","log","onBlur","actions","btn","Home","home","Navigation","nav","isLoggedIn","href","onLogout","MainHeader","isAuthenticated","App","setIsLoggedIn","localStorage","getItem","logoutHandler","Fragment","email","password","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.433aa2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1cErZ\",\"control\":\"Login_control__1X4dm\",\"invalid\":\"Login_invalid__1o8w7\",\"actions\":\"Login_actions__3BEmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3fWnF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__ij6zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__10U1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1Gf3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__1JmNs\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n// импорт компонентов\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  // создание useState'ов\n  useEffect(() => {\n    setFormIsValid(\n      enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  }, [enteredEmail, enteredPassword]);\n  // даем Email'y значение \"@\" если в поле инпута будет этот знак то она будет true, если её нету тогда false и Password'y\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    console.log(\"email\");\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes(\"@\")\n    );\n  };\n  // делаем так чтобы setEnteredPassword был больше 6 букв или цифр, так же с помощью trim инпут не считает пробелы как буквы\n  // в enteredEmail includes определяет есть-ли в массиве этот элемент \"@\" тем самым возвращая в зависимости true или false\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          {/* используем интерполяцию для классов */}\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n            // onBlur срабатывает когда элемент теряет фокус\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n            // onBlur срабатывает когда элемент теряет фокус\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n// импортируем реакт\nimport classes from './Navigation.module.css';\n// импортируем модульный css\n\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storageUserLoggedInfo = localStorage.getItem(\"isLogin\");\n// добавляем в локал сторедж \n    if (storageUserLoggedInfo === \"1\") {\n      setIsLoggedIn(\"true\");\n    }\n    // если storageUserLoggedInfo равна 1 то она сохраняеися в локал сторадже\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLogin\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}